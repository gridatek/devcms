name: Test DevCMS

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:54322/devcms
      SUPABASE_URL: http://localhost:54321
      SUPABASE_ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0
      SUPABASE_SERVICE_ROLE_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU
      SITE_ID: default-site

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Setup Docker Compose
      run: |
        # Pull images first to avoid timeout issues
        echo "Pulling Docker images..."
        docker compose pull

        # Start the full Supabase stack
        echo "Starting Supabase services..."
        docker compose up -d

        # Wait for services to be ready
        echo "Waiting for Supabase services to start..."
        sleep 45

        # Check if services are running
        echo "Checking service status..."
        docker compose ps

    - name: Wait for database
      run: |
        echo "Waiting for database to be ready..."
        timeout 60 bash -c 'until pg_isready -h localhost -p 54322 -U postgres; do sleep 2; done'

    - name: Run database migrations
      run: |
        echo "Running database migrations..."
        node tools/migrate.js

    - name: Seed database
      run: |
        echo "Seeding database with test data..."
        node tools/seed.js

    - name: Build shared package
      run: |
        echo "Building shared package..."
        npm run build --workspace=@devcms/shared

    - name: Build generator package
      run: |
        echo "Building generator package..."
        npm run build --workspace=@devcms/generator

    - name: Generate components
      run: |
        echo "Generating components from database..."
        npm run generate:components

    - name: Build admin app
      run: |
        echo "Building admin application..."
        npm run build:admin

    - name: Build site app
      run: |
        echo "Building site application..."
        npm run build:site

    - name: Install Playwright browsers
      run: npx playwright install --with-deps

    - name: Start applications for testing
      run: |
        echo "Starting applications..."
        npm run dev:admin &
        npm run dev:site &

        # Wait for apps to start
        echo "Waiting for applications to start..."
        timeout 60 bash -c 'until curl -f http://localhost:4200 >/dev/null 2>&1; do sleep 2; done'
        timeout 60 bash -c 'until curl -f http://localhost:4201 >/dev/null 2>&1; do sleep 2; done'

        echo "Applications are ready!"

    - name: Run E2E tests
      run: |
        echo "Running end-to-end tests..."
        npm run test:e2e

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

    - name: Show logs on failure
      if: failure()
      run: |
        echo "=== Docker Compose Logs ==="
        docker compose logs
        echo "=== Container Status ==="
        docker compose ps