import { test, expect } from '@playwright/test';
import { exec } from 'child_process';
import { promisify } from 'util';

const execAsync = promisify(exec);

test.describe('Component Generation', () => {
  test('should display generated blog post component from database', async ({ page }) => {
    // Components should already be generated by CI workflow
    // Verify generated component renders correctly
    await page.goto('/blog/getting-started-devcms');

    // Check that the generated component displays content
    await expect(page.locator('h1')).toContainText('Getting Started with DevCMS');

    // Check category and tags are displayed if they exist
    const categoryExists = await page.locator('[data-testid="category"]').count() > 0;
    const tagsExist = await page.locator('[data-testid="tags"]').count() > 0;
    
    if (categoryExists) {
      await expect(page.locator('[data-testid="category"]')).toContainText('Technology');
    }
    if (tagsExist) {
      await expect(page.locator('[data-testid="tags"]')).toContainText('Angular');
    }
  });

  test('should display generated blog list component with all posts', async ({ page }) => {
    await page.goto('/blog');

    // Check that posts are displayed (at least the sample posts)
    await expect(page.locator('article, .post-item, h2, h3')).toHaveCountGreaterThan(0);
    
    // Check for sample post titles
    const pageContent = await page.textContent('body');
    expect(pageContent).toMatch(/Getting Started with DevCMS|Database-First Design/);
  });

  test('should have basic site navigation working', async ({ page }) => {
    // Test that the main site loads
    await page.goto('/');
    
    // Should have some content on homepage
    const homeContent = await page.textContent('body');
    expect(homeContent?.length).toBeGreaterThan(0);
    
    // Test navigation to blog if it exists
    try {
      await page.goto('/blog', { waitUntil: 'domcontentloaded', timeout: 10000 });
      const blogContent = await page.textContent('body');
      expect(blogContent?.length).toBeGreaterThan(0);
    } catch (e) {
      // Blog route might not exist yet, that's OK for this test
      console.log('Blog route not available, skipping blog navigation test');
    }
  });
});